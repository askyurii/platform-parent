<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.bondarenko.platform</groupId>
    <artifactId>platform-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Platform :: Parent pom</name>

    <properties>
        <!--PROJECT-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.java.version>11</project.java.version>

        <!--DEPENDENCIES-->

        <!--PLUGINS-->

        <!--PROFILE variables-->
        <prof.skip.unit.tests>false</prof.skip.unit.tests>
        <prof.skip.integration.tests>false</prof.skip.integration.tests>
        <prof.skip.test.coverage.check>false</prof.skip.test.coverage.check>
        <prof.skip.code.quality.tools>false</prof.skip.code.quality.tools>

        <prof.auto.dependency.version.upgrade.phase>none</prof.auto.dependency.version.upgrade.phase>

        <!--COMMON PROPERTIES-->
        <project.tmp.directory>${project.build.directory}/tmp</project.tmp.directory>

        <jacoco.minimum.line.test.coverage>0.75</jacoco.minimum.line.test.coverage>
        <jacoco.minimum.branch.test.coverage>0.75</jacoco.minimum.branch.test.coverage>
        <!-- *   Match zero or more characters-->
        <!-- **  Match zero or more directories-->
        <!-- ?   Match a single character-->
        <jacoco.excludes>
            <!--exclude rule 1,(comma is important here)-->
            <!--exclude rule 2-->
        </jacoco.excludes>
        <surefireArgLine.module/>
        <failsafeArgLine.module/>

        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <maven-site-plugin.version>3.9.0</maven-site-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <platform-code-quality-java11.version>0.0.1-SNAPSHOT</platform-code-quality-java11.version>
        <spring-framework-bom.version>5.2.6.RELEASE</spring-framework-bom.version>
        <spring-boot-dependencies.version>2.3.0.RELEASE</spring-boot-dependencies.version>
        <junit-bom.version>5.6.2</junit-bom.version>
        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
        <extra-enforcer-rules.version>1.2</extra-enforcer-rules.version>
        <ossindex-maven-enforcer-rules.version>3.1.0</ossindex-maven-enforcer-rules.version>
        <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <minimum.required.maven.version>3.6</minimum.required.maven.version>
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <checkstyle.version>8.32</checkstyle.version>
    </properties>

    <profiles>
        <profile>
            <id>skip-tests</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <prof.skip.unit.tests>true</prof.skip.unit.tests>
                <prof.skip.integration.tests>true</prof.skip.integration.tests>
                <prof.skip.test.coverage.check>true</prof.skip.test.coverage.check>
            </properties>
        </profile>

        <profile>
            <id>skip-code-quality-tools</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <prof.skip.code.quality.tools>true</prof.skip.code.quality.tools>
            </properties>
        </profile>

        <profile>
            <id>fast-build</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <prof.skip.unit.tests>true</prof.skip.unit.tests>
                <prof.skip.integration.tests>true</prof.skip.integration.tests>
                <prof.skip.test.coverage.check>true</prof.skip.test.coverage.check>
                <prof.skip.code.quality.tools>true</prof.skip.code.quality.tools>
            </properties>
        </profile>

        <profile>
            <id>update-dependencies</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <prof.auto.dependency.version.upgrade.phase>generate-sources</prof.auto.dependency.version.upgrade.phase>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring-framework-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <release>${project.java.version}</release>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <debug>true</debug>
                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>
                        <optimize>true</optimize>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <!--suppress UnresolvedMavenProperty (injected by jacoco plugin)-->
                        <argLine>${surefireArgLine.module} ${surefireArgLine.jacoco}</argLine>
                        <skipTests>${prof.skip.unit.tests}</skipTests>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <systemPropertyVariables>
                            <java.io.tmpdir>${project.tmp.directory}</java.io.tmpdir>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <!--suppress UnresolvedMavenProperty (injected by jacoco plugin)-->
                        <argLine>${failsafeArgLine.module} ${failsafeArgLine.jacoco}</argLine>
                        <skipTests>${prof.skip.integration.tests}</skipTests>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <systemPropertyVariables>
                            <java.io.tmpdir>${project.tmp.directory}</java.io.tmpdir>
                        </systemPropertyVariables>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>checkstyle/checkstyle.xml</configLocation>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <consoleOutput>false</consoleOutput>
                        <failsOnError>false</failsOnError>
                        <failOnViolation>false</failOnViolation>
                        <logViolationsToConsole>false</logViolationsToConsole>
                        <violationSeverity>warning</violationSeverity>
                        <linkXRef>true</linkXRef>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>checkstyle-validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.bondarenko.platform</groupId>
                            <artifactId>platform-code-quality-java11</artifactId>
                            <version>${platform-code-quality-java11.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <configuration>
                        <skip>${prof.skip.test.coverage.check}</skip>
                    </configuration>
                    <executions>
                        <!--UNIT TESTS-->
                        <execution>
                            <id>pre-unit-test</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <propertyName>surefireArgLine.jacoco</propertyName>
                            </configuration>
                        </execution>

                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>

                        <!--INTEGRATION TESTS-->
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <propertyName>failsafeArgLine.jacoco</propertyName>
                            </configuration>
                        </execution>

                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>

                        <!--CODE COVERAGE-->
                        <execution>
                            <id>check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>CLASS</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jacoco.minimum.line.test.coverage}</minimum>
                                            </limit>
                                            <limit>
                                                <counter>BRANCH</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jacoco.minimum.branch.test.coverage}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                                <excludes>
                                    <exclude>${jacoco.excludes}</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <configuration>
                        <lineLength>100</lineLength>
                        <indentSize>2</indentSize>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>generate-directories</id>
                            <phase>generate-test-resources</phase>
                            <configuration>
                                <target>
                                    <!--GENERATE PROJECT TMP DIR-->
                                    <mkdir dir="${project.tmp.directory}"/>
                                </target>
                            </configuration>
                            <goals>
                                <goal>run</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <configuration>
                        <skip>${prof.skip.code.quality.tools}</skip>
                        <failFast>true</failFast>
                    </configuration>
                    <executions>
                        <execution>
                            <id>enforce-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <!--RULES FROM: Built-In Rules-->

                                    <!--ensure all dependencies converge to the same version-->
                                    <dependencyConvergence/>

                                    <!--enforces that a multi module build follows best practice-->
                                    <reactorModuleConvergence/>

                                    <!--ensures that every (transitive) dependency is resolved to it's specified version or higher.-->
                                    <requireUpperBoundDeps/>

                                    <!--enforces the JDK version-->
                                    <requireJavaVersion>
                                        <version>${project.java.version}</version>
                                    </requireJavaVersion>

                                    <!--RULES FROM: extra-enforcer-rules-->
                                    <enforceBytecodeVersion>
                                        <maxJdkVersion>${project.java.version}</maxJdkVersion>
                                    </enforceBytecodeVersion>

                                    <!--enforces the Maven version-->
                                    <requireMavenVersion>
                                        <version>${minimum.required.maven.version}</version>
                                    </requireMavenVersion>

                                    <!--verifies that there are no duplicate classes in the dependencies-->
                                    <banDuplicateClasses/>

                                    <!--verifies that there are no circular dependencies in the project-->
                                    <banCircularDependencies/>

                                    <!--verifies that source files have a required encoding-->
                                    <requireEncoding>
                                        <encoding>${project.build.sourceEncoding}</encoding>
                                        <includes>src/main/resources/**,src/test/resources/**</includes>
                                    </requireEncoding>

                                    <!--RULES FROM: ossindex-maven-enforcer-rules-->
                                    <banVulnerable implementation="org.sonatype.ossindex.maven.enforcer.BanVulnerableDependencies"/>
                                </rules>
                            </configuration>
                        </execution>
                        <execution>
                            <id>enforce-release-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <rules>
                                    <!--enforces that the artifact is not a snapshot-->
                                    <equireReleaseVersion/>
                                    <!--enforces that no snapshots are included as dependencies-->
                                    <requireReleaseDeps/>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>extra-enforcer-rules</artifactId>
                            <version>${extra-enforcer-rules.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.sonatype.ossindex.maven</groupId>
                            <artifactId>ossindex-maven-enforcer-rules</artifactId>
                            <version>${ossindex-maven-enforcer-rules.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                    <configuration>
                        <rulesUri>classpath:///versions-maven-plugin/version-policy.xml</rulesUri>
                    </configuration>
                    <executions>
                        <execution>
                            <id>update-internal-dependencies</id>
                            <goals>
                                <goal>update-parent</goal>
                                <goal>update-child-modules</goal>
                                <goal>commit</goal>
                            </goals>
                            <phase>${prof.auto.dependency.version.upgrade.phase}</phase>
                            <configuration>
                                <allowSnapshots>true</allowSnapshots>
                            </configuration>
                        </execution>
                        <execution>
                            <id>update-external-dependencies</id>
                            <goals>
                                <goal>display-plugin-updates</goal>
                                <goal>update-properties</goal>
                                <goal>commit</goal>
                            </goals>
                            <phase>${prof.auto.dependency.version.upgrade.phase}</phase>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.bondarenko.platform</groupId>
                            <artifactId>platform-code-quality-java11</artifactId>
                            <version>${platform-code-quality-java11.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
